
# Архитектора системы синхронизации/репликации данных 
Можно выделить 3 основных слоя/части архитектуры:

1. Event emitters layer (***EEL***) - слой ретрансляторов событий от внешних система. Данный слой состоит из объектов, отдельных экземпляров класса ***IEventEmitter***. 
2. Data synchronizers layer (DSL)- слой объектов, отвечаюющих за подготовку данных для синхронизации. Данный слой состоит из объектов, отдельных экземпляров класса ***IDataSyncer***. 
3. Data pushers layer (DPL) - слой, отвечающий за отправку данных, полученных от полученых от слоя DSL, во внешнюю среду. Данный слой состоит из объектов, отдельных экземпляров класса ***IDataPusher***.

Процесс синхронизации данных, представляет собой нечто следующее

```flow
Andrew->China: Says Hello
Note right of China: China thinks\nabout it
China-->Andrew: How are you?
Andrew->>China: I am good thanks!
```

## Специфакий
| Interface/Class name | Description |
| ---------------------| ----------- |
| IEventEmiiter | класс, скрывающий особенности реализации получения уведомлений от внешених систем и транслирующий события внутрь нашей системы |
| | on - подписка на события
| | http://nodejs.org/api/events.html |
| IDataSyncer | класс, представляющий собой черный ящик обработки данных от слоя EEL|
| IDataPusher | класс, инкапсулирующий способ отправки данных внешней системе |
| | push(data) -  отправляет данных внешней системе |


